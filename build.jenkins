pipeline {
    agent {
        label 'linux'
    }

    environment { SRC_CHANGED=true }

    stages {
        stage('Preparation') {
            steps {
                timeout(time: 15, unit: 'MINUTES') {
                    ansiColor('xterm') {
                        sh 'pub update'

                        script {
                            // 0 - unchanged, 1 - changed
                            // Script-Logik wird mit ! umgekehrt
                            SRC_CHANGED = ! sh(script: "srcchanged.sh --check", returnStatus: true)
                        }

                    }
                }

            }
        }
        stage('Analyze') {
            steps {
                ansiColor('xterm') {
                    sh 'dartanalyzer lib/'
                    sh 'dartanalyzer test/'
                }
            }
        }
        stage('Test') {
            steps {
                ansiColor('xterm') {
                    sh 'pub run test test/unit -p chrome'
                    sh 'pub run test test/visual -p chrome'
                }
            }
        }

        stage('Deploy samples') {
            when { expression { SRC_CHANGED } }
            steps {
                timeout(time: 30, unit: 'MINUTES') {
                    ansiColor('xterm') {
                        sh 'deploySamples.sh --prepare'
                        sh 'deploySamples.sh --update'
                        sh 'deploySamples.sh --deploy --release'
                        sh 'deploySamples.sh --publish --force'
                    }
                }
            }
        }
    }
}
